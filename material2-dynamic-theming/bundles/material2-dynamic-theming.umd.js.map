{"version":3,"file":"material2-dynamic-theming.umd.js.map","sources":["ng://material2-dynamic-theming/lib/definitions.ts","node_modules/tslib/tslib.es6.js","ng://material2-dynamic-theming/lib/utils.ts","ng://material2-dynamic-theming/lib/theming.service.ts","ng://material2-dynamic-theming/lib/theming.module.ts"],"sourcesContent":["export interface PaletteValues {\n  default: string;\n  lighter?: string;\n  darker?: string;\n  hover?: string;\n  contrast?: {\n      default?: string;\n      lighter?: string;\n      darker?: string;\n      hover?: string;\n  };\n}\n\nexport interface ThemingExtraOptions {\n  autoAdjust: boolean; // If true, check if the derived colors from the default one need some extra adjusting based on 'brightnessFactor' property.\n  brightnessFactor?: number;\n}\n\nexport enum Palettes {\n  primary = 'primary',\n  secondary = 'secondary',\n  warn = 'warn',\n  dark = 'dark',\n}\n\nexport enum CommonPaletteValues {\n  Default = 'default',\n  Lighter = 'lighter',\n  Darker = 'darker',\n  Hover = 'hover',\n}\n\nexport type PaletteMap<C extends object, T> = { [P in keyof C]: T };\n\nexport type PaletteValuesType = PaletteMap<typeof Palettes, PaletteValues | string>;\n\nexport const OPACITY_FACTOR = .4;\nexport const HOVER_OPACITY_FACTOR = .2;\nexport const FOREGROUND_COLORS_BRIGHT_FACTOR = 200;\nexport const BACKGROUND_COLORS_BRIGHT_FACTOR = 245;\nexport const AUTO_GENERATE_FOREGROUNDS = true;\n\nexport const DEFAULT_THEME_PALETTES: PaletteValuesType = {\n    primary: '#3F51B5',\n    secondary: '#FFD31F',\n    dark: '#616161',\n    warn: '#F44336',\n};\n\nexport const DEFAULT_THEMING_EXTRA_OPTIONS: ThemingExtraOptions = {\n    autoAdjust: false,\n    brightnessFactor: BACKGROUND_COLORS_BRIGHT_FACTOR\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ElementRef } from '@angular/core';\nimport { color as d3Color, rgb } from 'd3-color';\n// import { getProperty } from '../../../utils/object.utils';\nimport { AUTO_GENERATE_FOREGROUNDS, CommonPaletteValues as CommonPaletteValuesEnum, DEFAULT_THEMING_EXTRA_OPTIONS, FOREGROUND_COLORS_BRIGHT_FACTOR, OPACITY_FACTOR, Palettes, PaletteValues, ThemingExtraOptions } from './definitions';\n\nexport const DARKENING_K: number = OPACITY_FACTOR;\nexport const BRIGHTEN_K: number = OPACITY_FACTOR;\nexport const BRIGHTEN_HOVER_K: number = 1;\nexport const LIGHT_LIGHTEN_K: number = .9;\nexport const LIGHT_DARKEN_K: number = .7;\nexport const LIGHT_HOVER_K: number = .5;\n\nconst CommonPaletteValues: string[] = Object.values(CommonPaletteValuesEnum);\n\n/**\n * Returns a solid color that is the resulting of adding opacity to <color> and having a <background> beneath it\n * @param color hex value color\n * @param background hex value background color\n * @param opacity 0 to 1 opacity value\n */\nexport function getSolidColorFromOpacityBackground(color: string, background: string, opacity: number): string {\n    const delta: number = 1 - opacity;\n    const dColor = d3Color(color).rgb();\n    const dBackgroundColor = d3Color(background).rgb();\n    return rgb(Math.round(dColor.r + ((dBackgroundColor.r - dColor.r) * delta)),\n        Math.round(dColor.g + ((dBackgroundColor.g - dColor.g) * delta)),\n        Math.round(dColor.b + ((dBackgroundColor.b - dColor.b) * delta))).hex();\n}\n\n/**\n * Returns a new color brighter depending on k\n * @param color hex color (e.g.: #FFFFFF)\n * @param k (from 0 to 1)\n */\nexport function getDarkerColor(color: string, k: number): string {\n    try {\n        return getSolidColorFromOpacityBackground(color, '#000000', k);\n    } catch (error) {\n        console.warn('d3-color', 'darker', `Wrong color ${ color } provided`);\n        return color;\n    }\n}\n\n/**\n * Returns a new color brighter depending on k\n * @param color hex color (e.g.: #FFFFFF)\n * @param k (from 0 to 1)\n */\nexport function getBrighterColor(color: string, k: number): string {\n    try {\n        return getSolidColorFromOpacityBackground(color, '#FFFFFF', k);\n    } catch (error) {\n        console.warn('d3-color', 'brighter', `Wrong color ${ color } provided`);\n        return color;\n    }\n}\n\n// full credit to: http://geniuscarrier.com/copy-object-in-javascript/\n/**\n * Shallow copy keeps references to original objects, arrays or functions within the new object,\n * so the \"copy\" is still linked to the original object. In other words, they will be pointing to the same memory location.\n * @param oldObj\n */\nexport function shallowCopy(oldObj) {\n  const newObj = {};\n  for(var i in oldObj) {\n      if(oldObj.hasOwnProperty(i)) {\n          newObj[i] = oldObj[i];\n      }\n  }\n  return newObj;\n}\n\n// full credit to: http://geniuscarrier.com/copy-object-in-javascript/\n/**\n * Deep copy duplicates everything, and allocates memory in a different location.\n * @param oldObj\n */\nexport function deepCopy(oldObj) {\n  let newObj = oldObj;\n  if (oldObj && typeof oldObj === 'object') {\n      newObj = Object.prototype.toString.call(oldObj) === \"[object Array]\" ? [] : {};\n      for (let i in oldObj) {\n          newObj[i] = deepCopy(oldObj[i]);\n      }\n  }\n  return newObj;\n}\n\n/**\n * Return the desired property from an object if found\n * @param obj target Object\n * @param path path to the desired property with . notation i.e: 'path.to.object'\n */\nexport function getProperty(obj: any, path: string): any {\n  if(/^([A-Za-z\\d]+\\.?)*$/.test(path)) {\n    let pathParts = path.split('.');\n    if(obj.hasOwnProperty(pathParts[0])) {\n      if(pathParts.length === 1) {\n        return obj[pathParts[0]];\n      } else {\n        return getProperty(obj, pathParts.slice(1).join('.'));\n      }\n    }\n  }\n  return void 0;\n}\n\nexport class ThemingUtil {\n\n    /**\n     * Returns the color and its lighter and darker versions [color, lighter, darker]\n     * @param color\n     */\n    static getColorsFromBase(color: string): [string, string, string, string] {\n        return [\n                ThemingUtil.getColorString(color),\n                ThemingUtil.getColorString(getBrighterColor(color, BRIGHTEN_K)),\n                ThemingUtil.getColorString(getDarkerColor(color, DARKENING_K)),\n                ThemingUtil.getColorString(getBrighterColor(color, BRIGHTEN_HOVER_K)),\n            ];\n    }\n\n    /**\n     * Returns the colors [default, lighten, darken, hover] for a color that is considered 'bright'.\n     * @param color\n     */\n    static getColorsFromLightColor(color: string): [string, string, string, string] {\n        return [\n            ThemingUtil.getColorString(color),\n            ThemingUtil.getColorString(getDarkerColor(color, LIGHT_LIGHTEN_K)),\n            ThemingUtil.getColorString(getDarkerColor(color, LIGHT_DARKEN_K)),\n            ThemingUtil.getColorString(getDarkerColor(color, LIGHT_HOVER_K)),\n        ];\n    }\n\n    /**\n     * Get hex value from a color string either if it comes in #FFFFFF or 255, 255, 255 notation\n     * @param hexColor\n     */\n    static getColorString(hexColor: string): string {\n        const dColor = rgb(hexColor);\n        return `${ dColor.r },${ dColor.g },${ dColor.b }`;\n    }\n\n    /**\n     * Get a random hex color\n     */\n    static getRandomHex(): string {\n        return ThemingUtil.getHexValueFromColor(\n            `${ Math.floor(Math.random() * 255) },${ Math.floor(Math.random() * 255) },${ Math.floor(Math.random() * 255) }`\n        );\n    }\n\n    /**\n     * Generic method to get custom properties\n     * @param elementRef elementRef element where custom properties will be retrieved from\n     * @param customProperties list of properties to get\n     */\n    static getCustomProperties(elementRef: ElementRef, customProperties: string[]) {\n        const styles = getComputedStyle(elementRef.nativeElement);\n        return customProperties.map((propertyName: string) => {\n            return styles.getPropertyValue(propertyName);\n        });\n    }\n\n    /**\n     * Generic method to set custom properties\n     * @param elementRef elementRef element where custom properties will be set to\n     * @param customProperties dictionary of properties to set\n     */\n    static setCustomProperties(elementRef: ElementRef, customProperties: { [k: string]: any }): void {\n        Object.keys(customProperties).forEach((propertyKey: string) => {\n            elementRef.nativeElement.style.setProperty(propertyKey, customProperties[propertyKey]);\n        });\n    }\n\n    /**\n     * Set css custom properties based on a palette name and values and onto and onto an ElementRef styles\n     * @param elementRef element where custom properties will be set\n     * @param paletteValues color values\n     * @param paletteName name of the palette to set\n     * @param options custom to set if needed\n     */\n    static setPaletteCustomProperties(elementRef: ElementRef, paletteValues: PaletteValues | string, paletteName: Palettes,\n        options?: ThemingExtraOptions) {\n        options = { ...DEFAULT_THEMING_EXTRA_OPTIONS, ...options };\n        if (!paletteValues) console.error(this, `paletteValues should be <string | PaletteValues>`, paletteValues);\n        const defaultColor = (typeof paletteValues === 'string') ?\n            ThemingUtil.getHexValueFromColor(paletteValues) : ThemingUtil.getHexValueFromColor(paletteValues.default);\n        const autoColors: [string, string, string, string] = options.autoAdjust && ThemingUtil.getIsBright(defaultColor, options.brightnessFactor)\n            ? ThemingUtil.getColorsFromLightColor(defaultColor) : ThemingUtil.getColorsFromBase(defaultColor);\n        const autoContrasts = autoColors.map(ThemingUtil.getHexValueFromColor).map(ThemingUtil.getForegroundColorW3C).map(ThemingUtil.getColorString);\n        const customProperties: { [k: string]: any } = {};\n        const paletteKeys = ThemingUtil.getPaletteCustomPropertiesNames(paletteName, false);\n        paletteKeys.forEach((key: string, index: number) =>\n            customProperties[paletteKeys[index]] = ((paletteValues as PaletteValues)[CommonPaletteValues[index]]) || autoColors[index]);\n        if (AUTO_GENERATE_FOREGROUNDS) {\n            const contrastKeys = ThemingUtil.getPaletteCustomPropertiesNames(paletteName, true);\n            contrastKeys.forEach((key: string, index: number) =>\n                customProperties[contrastKeys[index]] = getProperty(paletteValues, `contrast.${ contrastKeys[index] }`) || autoContrasts[index]);\n        }\n        ThemingUtil.setCustomProperties(elementRef, customProperties);\n    }\n\n    /**\n     * Return custom property keys for a palette\n     * @param contrast flag indicating to return contrast custom properties keys\n     */\n    static getPaletteCustomPropertiesNames(paletteName: string, contrast: boolean = false): [string, string, string, string] {\n        const contrastModifier: string = !contrast ? '' : 'contrast-';\n        return [\n            `--${ paletteName }-palette-${ contrastModifier }default`,\n            `--${ paletteName }-palette-${ contrastModifier }lighter`,\n            `--${ paletteName }-palette-${ contrastModifier }darker`,\n            `--${ paletteName }-palette-${ contrastModifier }hover`,\n        ];\n    }\n\n    /**\n     * Get hex color from either an hex or `r, g, b` string\n     * @param color  hex or `r, g, b` string\n     */\n    static getHexValueFromColor(color: string): string {\n        if (!color.includes('#')) {\n            const colorRGB: number[] = color.replace(/\\s/gi, '').split(',').map((val) => parseInt(val));\n            color = rgb(colorRGB[0], colorRGB[1], colorRGB[2]).hex();\n        }\n        return color;\n    }\n\n    /**\n     * AutoGenerate foreground color based on a background color\n     * http://www.w3.org/TR/AERT#color-contrast\n     * @param backgroundColor background color from which the foreground color will be calculated\n     */\n    static getForegroundColorW3C(backgroundColor: string): string {\n        return ThemingUtil.getIsBright(backgroundColor, FOREGROUND_COLORS_BRIGHT_FACTOR) ?  '#000000' : '#FFFFFF';\n    }\n\n    /**\n     * Resolve if color is bright (otherwise is dark)\n     * http://www.w3.org/TR/AERT#color-contrast\n     * @param color value to check if bright or dark should be applied\n     * @param brightFactor value from 0 to 255 that specifies the limit where this color is considered 'Bright'\n     */\n    static getIsBright(color: string, brightFactor: number): boolean {\n        const dColor = rgb(color);\n        const o = Math.round(((dColor.r * 299) + (dColor.g * 587) + (dColor.b * 114)) / 1000);\n        return o > brightFactor;\n    }\n}\n","import { ApplicationRef, ElementRef, Inject, Injectable } from '@angular/core';\nimport { Palettes, PaletteValues, ThemingExtraOptions } from './definitions';\nimport { DEFAULT_THEME_PALETTES, PaletteValuesType } from './definitions';\nimport { deepCopy } from './utils';\nimport { ThemingUtil } from './utils';\nimport { DOCUMENT } from '@angular/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n/**\n *  Rationale: This provider is a singleton and should be injected only once, since it styles the application when constructor is executed\n *  Pitfall: YOU MUST NOT provide this service via a component decorator, component providers won't respect `providedIn: 'root'` property value.\n */\n@Injectable({ providedIn: 'root' })\nexport class ThemingService {\n\n    private currentPalettes$: BehaviorSubject<PaletteValuesType> = new BehaviorSubject<PaletteValuesType>(DEFAULT_THEME_PALETTES);\n    private readonly rootElementRef: ElementRef;\n\n    constructor(\n        private appRef: ApplicationRef,\n        @Inject(DOCUMENT) private document: any,\n    ) {\n        // this.rootElementRef = this.appRef.components[0].location;\n        // this.initThemingPalettes();\n    }\n\n    /**\n     * Set the theming palette for a given scope/elementRef\n     * @param elementRef\n     * @param paletteValue\n     * @param paletteName\n     */\n    public setThemingPalette(elementRef: ElementRef, paletteValue: PaletteValues | string, paletteName: Palettes,\n        options?: ThemingExtraOptions): void {\n        ThemingUtil.setPaletteCustomProperties(elementRef, paletteValue, paletteName, options);\n    }\n\n    /**\n     * Set the theming palette application wide\n     * @param paletteValue\n     * @param paletteName\n     */\n    public setThemingPaletteForRoot(paletteValue: PaletteValues | string, paletteName: Palettes, options?: ThemingExtraOptions): void {\n        ThemingUtil.setPaletteCustomProperties(this.rootElementRef, paletteValue, paletteName, options);\n        ThemingUtil.setPaletteCustomProperties(this.rootElementRef, paletteValue, <any>`${ paletteName }-root`, options); // save for root\n        const defaultPalettes: any = deepCopy(this.currentPalettes$.value);\n        defaultPalettes[paletteName] = paletteValue;\n        this.currentPalettes$.next(defaultPalettes);\n    }\n\n    /**\n     * Observable that will push changes to the requested palette\n     * @param palette name of the palette\n     */\n    public getPaletteObservable(palette: Palettes): Observable<PaletteValues | string | {}> {\n        return this.currentPalettes$.pipe(\n            pluck(palette),\n            distinctUntilChanged()\n        );\n    }\n\n    /**\n     * Get palette values given a palette name and a ref (could be current component or app root)\n     * @param paletteName name of the palette which we want to query about\n     * @param ref element ref, helps mark context\n     */\n    public getDOMPaletteValues(paletteName: Palettes, ref: ElementRef = this.rootElementRef): PaletteValues {\n        const paletteCustomProperties =\n            ThemingUtil.getCustomProperties(ref, ThemingUtil.getPaletteCustomPropertiesNames(paletteName, true));\n        const paletteCustomPropertiesContrast =\n            ThemingUtil.getCustomProperties(ref, ThemingUtil.getPaletteCustomPropertiesNames(paletteName, true));\n        return {\n            default: paletteCustomProperties[0],\n            lighter: paletteCustomProperties[1],\n            darker: paletteCustomProperties[2],\n            hover: paletteCustomProperties[3],\n            contrast: {\n                default: paletteCustomPropertiesContrast[0],\n                lighter: paletteCustomPropertiesContrast[1],\n                darker: paletteCustomPropertiesContrast[2],\n                hover: paletteCustomPropertiesContrast[3],\n            }\n        };\n    }\n\n    /**\n     * Get current value of the palette\n     * @param palette name of the palette\n     */\n    public getPalette(palette: Palettes): PaletteValues | string {\n        return this.currentPalettes$.value[palette];\n    }\n\n    /**\n     * Initialize application theming palettes\n     */\n    private initThemingPalettes(): void {\n        Object.keys(this.currentPalettes$.value).forEach((palette: Palettes) => {\n            ThemingUtil.setPaletteCustomProperties(this.rootElementRef, DEFAULT_THEME_PALETTES[palette], palette);\n            ThemingUtil.setPaletteCustomProperties(this.rootElementRef, DEFAULT_THEME_PALETTES[palette], <any>`${ palette }-root`); // save for root\n        });\n    }\n\n    /**\n     * Temporary showcase method, initiates the change of the theme palettes to random color values\n     */\n    private initThemeDemo(): void {\n        // TODO: maybe integrate with some music?\n    }\n\n}\n","import { NgModule } from '@angular/core';\n\n// TODO: configuration: add forRoot provisioning of configuration\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class ThemingModule { }\n"],"names":["CommonPaletteValues","CommonPaletteValuesEnum","d3Color","rgb","BehaviorSubject","pluck","distinctUntilChanged","Injectable","ApplicationRef","Inject","DOCUMENT","NgModule"],"mappings":"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"}
